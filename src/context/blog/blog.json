[
  {
    "title": "Components and Props",
    "description": "This function is a valid React component because it accepts a single 'props' object argument with data and returns a React element. We call such components 'function components' because they are literally JavaScript functions. Components can be passed as props, which stand for properties. Props are like function arguments, and you send them into the component as attributes.",
    "more": "https://reactjs.org/docs/components-and-props.html",
    "image": "https://i.stack.imgur.com/wqvF2.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Web Development", "JavaScript"]
  },
  {
    "title": "State and Lifecycle in React",
    "description": "State is a plain JavaScript object used by React to represent information about the component's current situation. It's managed in the component, and each component has a lifecycle, which you can monitor and manipulate during its three main phases: Mounting, Updating, and Unmounting.",
    "more": "https://reactjs.org/docs/state-and-lifecycle.html",
    "image": "https://cdn-media-1.freecodecamp.org/images/1*_drMYY_IEgboMS4RhvC-lQ.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "State Management", "Lifecycle"]
  },
  {
    "title": "Handling Events",
    "description": "React allows you to handle events like mouse clicks, form submissions, and keyboard presses using JSX syntax. You can pass event handlers as props to components and handle them in your functions.",
    "more": "https://reactjs.org/docs/handling-events.html",
    "image": "https://packt-type-cloud.s3.amazonaws.com/uploads/sites/3237/2018/12/3702ea56-01ab-4d19-8078-5e1cd4b0e080.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Event Handling", "JavaScript"]
  },
  {
    "title": "Conditional Rendering",
    "description": "Conditional rendering is the ability to render different UI based on conditions in React. It enables you to display certain elements or components if a condition is true, such as showing a loading spinner when data is being fetched.",
    "more": "https://reactjs.org/docs/conditional-rendering.html",
    "image": "https://res.cloudinary.com/practicaldev/image/fetch/s--GIbvW-CM--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/ww90ui11igvcmharnqw8.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Conditional Rendering", "UI"]
  },
  {
    "title": "Lists and Keys",
    "description": "Keys help React distinguish items in a list, managing changed, new, or removed items. Lists can be rendered using JavaScript arrays and the map() function, which is often used for dynamically generating elements.",
    "more": "https://reactjs.org/docs/lists-and-keys.html",
    "image": "https://res.cloudinary.com/practicaldev/image/fetch/s--hnX3yG9g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/06fdjldmptmed06wxxko.PNG",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Lists", "JavaScript"]
  },
  {
    "title": "Lifting State Up",
    "description": "In React, sharing state is accomplished by moving it to the closest common ancestor of components that need it. This is called 'lifting state up,' a technique to make components communicate by sharing data.",
    "more": "https://reactjs.org/docs/lifting-state-up.html",
    "image": "https://miro.medium.com/max/1400/1*3DpOVY9vZpw2Ll4nWBFu9w.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "State Management", "Component Communication"]
  },
  {
    "title": "Composition vs Inheritance",
    "description": "React favors composition over inheritance for building components. Composition allows components to be combined in a flexible manner while inheritance is used in very specific cases.",
    "more": "https://reactjs.org/docs/composition-vs-inheritance.html",
    "image": "https://i2.wp.com/www.techdiscuss.net/wp-content/uploads/2021/01/composition-vs-inheritance.png?resize=640%2C384&ssl=1",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Component Design", "Composition"]
  },
  {
    "title": "Thinking in React",
    "description": "Thinking in React introduces the method of breaking down UIs into reusable components, offering strategies to effectively build apps by focusing on components and state management.",
    "more": "https://reactjs.org/docs/thinking-in-react.html",
    "image": "https://reactjs.org/static/9381f09e609723a8bb6e4ba1a7713b46/90cbd/thinking-in-react-components.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Component Architecture", "UI Design"]
  },
  {
    "title": "Context in React",
    "description": "React Context allows passing props between components without the need for prop drilling. It helps in managing shared state like user authentication or themes across different components.",
    "more": "https://reactjs.org/docs/context.html",
    "image": "https://miro.medium.com/max/1838/1*7gl-3SbI7MszLOCS1F953Q.jpeg",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "State Management", "Context API"]
  },
  {
    "title": "Using the useEffect Hook",
    "description": "The useEffect hook in React manages side-effects in functional components. It allows you to perform actions like fetching data or updating the DOM after rendering.",
    "more": "https://reactjs.org/docs/hooks-effect.html",
    "image": "https://daveceddia.com/images/useEffect-hook.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "useEffect", "Hooks"]
  },
  {
    "title": "Render Props",
    "description": "Render props is a technique in React to share code between components by passing a function as a prop, which allows for more flexible composition of components.",
    "more": "https://reactjs.org/docs/render-props.html",
    "image": "https://idkblogs.com/images/react/render_props/render_props.png",
    "common": "blog",
    "date": "2022-01-11T07:47:26.061Z",
    "tag": ["React", "Render Props", "Component Reusability"]
  }
]
